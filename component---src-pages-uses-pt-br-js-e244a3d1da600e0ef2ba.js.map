{"version":3,"file":"component---src-pages-uses-pt-br-js-e244a3d1da600e0ef2ba.js","mappings":"wJAKMA,EAAU,WAAH,OACX,gBAAC,WAAc,KACb,yBAAG,yGAIY,EAYnB,UATa,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACRC,EAAQC,EAAAA,KAAa,SAACC,GAAI,wBAC3BA,EAAK,CACRC,KAAM,SAAO,IAGf,OAAO,gBAAC,IAAY,CAACC,MAAM,UAAUC,QAAS,gBAACP,EAAO,MAAKC,SAAUA,EAAUC,MAAOA,GACxF,C,mGCjBMM,EAAiBC,EAAAA,QAAAA,IAAAA,WAAU,kEAAVA,CAAU,kSASpBC,EAAAA,GAAAA,MAQaA,EAAAA,GAAAA,QASpBC,EAAkBF,EAAAA,QAAAA,IAAAA,WAAU,mEAAVA,CAAU,8IAG9BD,EACMA,GAiBJI,EAAaH,EAAAA,QAAAA,GAAAA,WAAS,8DAATA,CAAS,uBAItBI,EAAiBJ,EAAAA,QAAAA,GAAAA,WAAS,kEAATA,CAAS,+IAOnBC,EAAAA,GAAAA,OAYPI,EAAeL,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,gIC9DzBM,EAAW,SAAH,GAAwB,IAAlBC,EAAU,EAAVA,WAClB,OACE,gBAACL,EAAe,KACbK,EAAWC,KAAI,SAACC,GACf,IAAQb,EAAgBa,EAAhBb,KAAgBa,EAAVhB,MAEd,OACE,gBAACM,EAAc,CAACW,IAAKD,EAASC,IAAK,2BAA0BD,EAASC,KACpE,0BAAKD,EAASE,MAAMf,IAEpB,gBAACO,EAAU,CAAC,cAAY,aACrBM,EAAShB,MAAMe,KAAI,YAAoC,IAAjCI,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAClCC,GAAYD,aAAM,EAANA,EAAQE,QAAS,IAAK,EAExC,OACE,gBAACZ,EAAc,CAACM,IAAKE,EAAM,sBAAqBA,GAC9C,0BAAKA,GACL,yBAAIC,EAAYjB,IAEfmB,GACC,gBAACV,EAAY,CAAC,cAAY,eACxB,0BACGS,EAAON,KAAI,gBAAGG,EAAK,EAALA,MAAOM,EAAG,EAAHA,IAAG,OACvB,sBAAIP,IAAKC,EAAO,wBAAuBA,GACrC,gBAAC,KAAM,CAACO,GAAG,IAAIC,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC3CV,GAEA,MAOnB,KAIR,IAGN,E,UC5CMW,EAAe,SAAH,GAA6C,IAAvCzB,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASN,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAC1CG,GAAO2B,EAAAA,EAAAA,GAAS/B,EAASgC,UACzBC,GAAYC,EAAAA,EAAAA,GAAK9B,GAAQ,OAAS,SAExC,OACE,gBAAC+B,EAAA,EAAO,CAACnC,SAAUA,EAAUoC,KAAM,CAAE/B,MAAO4B,IAC1C,gBAAC,KAAgB,KACf,gBAAC,KAAS,KACR,0BAAK5B,GAEJC,EAED,gBAACQ,EAAQ,CAACC,WAAYd,MAKhC,C","sources":["webpack://@jlozovei/me/./src/pages/uses.pt-br.js","webpack://@jlozovei/me/./src/components/Uses/List/styled.js","webpack://@jlozovei/me/./src/components/Uses/List/index.js","webpack://@jlozovei/me/./src/templates/Uses/index.js"],"sourcesContent":["import React from 'react';\n\nimport { UsesTemplate } from 'templates/Uses';\nimport usesData from 'content/uses.yml';\n\nconst Content = () => (\n  <React.Fragment>\n    <p>\n      Na minha rotina diária eu uso várias ferramentas, dispositivos e aparelhos. Aqui estão algumas\n      delas:\n    </p>\n  </React.Fragment>\n);\n\nconst Uses = ({ location }) => {\n  const items = usesData.map((item) => ({\n    ...item,\n    lang: 'pt-br'\n  }));\n\n  return <UsesTemplate title=\"Eu uso.\" content={<Content />} location={location} items={items} />;\n};\n\nexport default Uses;\n","import styled from 'styled-components';\n\nimport { colors, sizes } from 'assets/styled';\n\nconst StyledCategory = styled.div`\n  h3 {\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n    margin-bottom: 2rem;\n    background-color: transparent;\n    color: ${colors.white};\n\n    &:after {\n      display: inline-block;\n      flex: 1;\n      width: 100%;\n      height: 1px;\n      margin-left: 1rem;\n      background-color: ${colors.sunset};\n    }\n  }\n\n  & + div {\n    margin-top: 2rem;\n  }\n`;\n\nconst StyledContainer = styled.div`\n  margin-top: 4rem;\n\n  ${StyledCategory} {\n    & + ${StyledCategory} {\n      margin-top: 4rem;\n    }\n\n    &:nth-child(even) {\n      h3 {\n        flex-direction: row-reverse;\n\n        &:after {\n          margin-left: 0;\n          margin-right: 1rem;\n        }\n      }\n    }\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin-left: 2rem;\n`;\n\nconst StyledListItem = styled.li`\n  list-style-type: disc;\n\n  h4 {\n    display: inline-block;\n    margin-bottom: 0.5rem;\n    font-size: 1.25rem;\n    color: ${colors.white};\n  }\n\n  p {\n    margin-bottom: 0;\n  }\n\n  & + li {\n    margin-top: 2rem;\n  }\n`;\n\nconst StyledExtras = styled.div`\n  margin-top: 0.5rem;\n\n  ul {\n    display: flex;\n    flex-flow: row wrap;\n    align-items: center;\n    justify-content: flex-start;\n\n    li {\n      margin-right: 1rem;\n    }\n  }\n`;\n\nexport { StyledContainer, StyledCategory, StyledList, StyledListItem, StyledExtras };\n","import React from 'react';\n\nimport { Anchor } from 'assets/styled';\n\nimport {\n  StyledContainer,\n  StyledCategory,\n  StyledList,\n  StyledListItem,\n  StyledExtras\n} from './styled';\n\nconst UsesList = ({ categories }) => {\n  return (\n    <StyledContainer>\n      {categories.map((category) => {\n        const { lang, items } = category;\n\n        return (\n          <StyledCategory key={category.key} data-testid={`category--${category.key}`}>\n            <h3>{category.label[lang]}</h3>\n\n            <StyledList data-testid=\"uses-list\">\n              {category.items.map(({ name, description, extras }) => {\n                const hasExtras = extras?.length > 0 || false;\n\n                return (\n                  <StyledListItem key={name} data-testid={`use--${name}`}>\n                    <h4>{name}</h4>\n                    <p>{description[lang]}</p>\n\n                    {hasExtras && (\n                      <StyledExtras data-testid=\"extras-list\">\n                        <ul>\n                          {extras.map(({ label, url }) => (\n                            <li key={label} data-testid={`extra--${label}`}>\n                              <Anchor as=\"a\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {label}\n                              </Anchor>\n                            </li>\n                          ))}\n                        </ul>\n                      </StyledExtras>\n                    )}\n                  </StyledListItem>\n                );\n              })}\n            </StyledList>\n          </StyledCategory>\n        );\n      })}\n    </StyledContainer>\n  );\n};\n\nexport { UsesList };\n","import React from 'react';\n\nimport { Default } from 'templates/Default';\nimport { UsesList } from 'components/Uses';\n\nimport { Container, SectionWatermark } from 'assets/styled';\n\nimport { language, isEn } from 'helpers/language';\n\nconst UsesTemplate = ({ title, content, location, items }) => {\n  const lang = language(location.pathname);\n  const pageTitle = isEn(lang) ? 'Uses' : 'Eu uso';\n\n  return (\n    <Default location={location} meta={{ title: pageTitle }}>\n      <SectionWatermark>\n        <Container>\n          <h1>{title}</h1>\n\n          {content}\n\n          <UsesList categories={items} />\n        </Container>\n      </SectionWatermark>\n    </Default>\n  );\n};\n\nexport { UsesTemplate };\n"],"names":["Content","location","items","usesData","item","lang","title","content","StyledCategory","styled","colors","StyledContainer","StyledList","StyledListItem","StyledExtras","UsesList","categories","map","category","key","label","name","description","extras","hasExtras","length","url","as","href","target","rel","UsesTemplate","language","pathname","pageTitle","isEn","Default","meta"],"sourceRoot":""}